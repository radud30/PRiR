#include <stdio.h>
#include <string.h>
#include <math.h>
#include "mpi.h"

int main(int argc, char **argv){
	int p,suma,n;
	int tag = 50;
	double pi;

	MPI_Init(&argc, &argv);
	MPI_Comm_rank(MPI_COMM_WORLD, &p);
	MPI_Comm_size(MPI_COMM_WORLD, &n);
	MPI_Status status;

	if(p == 0){
		suma = p + 1;
		pi = (pow(-1, suma - 1) / ((2 * suma) - 1)) * 4;
		MPI_Send(&pi, 1, MPI_DOUBLE, p + 1, tag, MPI_COMM_WORLD);
		}
	if((p> 0) && (p< n-1)){
		MPI_Recv(&pi, 1, MPI_DOUBLE, p - 1, tag, MPI_COMM_WORLD, &status);
		suma = p + 1;
		pi /= 4;
		pi += (pow(-1, suma - 1) / ((2 * suma) - 1));
		pi *= 4;
		printf("Numer procesu: %d przyblizenie wynosi: %f \n", p, pi);
		if(p != n - 1){
			MPI_Send(&pi, 1, MPI_DOUBLE, p + 1, tag, MPI_COMM_WORLD);
		}
	}
	MPI_Finalize();
	return 0;
}